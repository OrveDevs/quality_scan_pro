name: Flutter CI

# Activa el workflow en pushes o pull requests a la rama main y develop
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest # Usamos un runner de Linux que es rápido y común

    steps:
      # 1. Checkout del código del repositorio
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Configurar Java (necesario para Android)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      # 3. Configurar Flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable' # Esto usará la última versión estable disponible en el runner
          channel: 'stable'
          cache: true

      # 4. Obtener dependencias de Flutter
      - name: Get Flutter dependencies
        run: flutter pub get

      # 5. Verificar el formateo del código Dart
      - name: Check Dart formatting
        run: dart format --output=none --set-exit-if-changed .

      # 6. Analizar el código con el analizador de Dart
      - name: Analyze Dart code
        run: flutter analyze

      # 7. Ejecutar pruebas de Flutter (unit y widget tests)
      - name: Run Flutter tests
        run: flutter test

      # 8. (Opcional) Compilar APK de Android (modo debug para velocidad)
      - name: Build Android APK (debug)
        run: flutter build apk --debug