name: quality_scan_pro
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.7.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  sqlite3_flutter_libs: ^0.5.0 # O la última versión compatible que veas en pub.dev
  package_info_plus: ^5.0.1 # O la última versión
  csv: ^5.1.1 # O la última versión disponible en pub.dev
  flutter:
    sdk: flutter
    # UI & Navigation
    # flutter_localizations se añade para soportar múltiples idiomas.
    # go_router es para manejar la navegación entre pantallas.
  flutter_localizations:
    sdk: flutter
  go_router: ^12.1.1

    # Core & State Management
    # flutter_bloc para manejar el estado de la aplicación (arquitectura BLoC).
    # get_it para la inyección de dependencias (acceder a servicios fácilmente).
  flutter_bloc: ^8.1.3
  get_it: ^7.6.4

    # Local Database
    # drift para la base de datos SQLite local.
  drift: ^2.14.0

    # Network
    # dio para realizar peticiones HTTP al backend.
    # connectivity_plus para verificar el estado de la conexión a internet.
  dio: ^5.3.2
  connectivity_plus: ^5.0.1

    # Security
    # flutter_secure_storage para guardar datos sensibles de forma segura.
    # crypto para funciones de encriptación.
  flutter_secure_storage: ^9.0.0
  crypto: ^3.0.3

    # Scanning & Camera
    # mobile_scanner para escanear códigos de barras/QR.
    # camera para acceder a la cámara y tomar fotos.
  mobile_scanner: ^3.5.2
  camera: ^0.10.5



  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8

dev_dependencies:
  flutter_test:
    sdk: flutter
    # Build tools for Drift
    # drift_dev para generar el código de las tablas y DAOs de Drift.
    # build_runner es el ejecutor de tareas de generación de código en Dart.
  drift_dev: ^2.14.0
  build_runner: ^2.4.7 # O la versión más reciente compatible


  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true
    # Para añadir assets a tu aplicación, añade una sección de assets como esta:
  assets:
    - assets/data/ # Esto incluye todos los archivos dentro de assets/data/
    # - assets/data/PRODUCTOS.csv # Alternativamente, puedes especificar archivos individuales

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
